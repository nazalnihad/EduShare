/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sample_management;
import db_connect.ConnectionProvider;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author nazal
 */
public class editPage extends javax.swing.JFrame {
public String edit_file_name;
    /**
     * Creates new form editPage
     */
     public editPage(){
         initComponents();
     }
    public editPage(String file_name) {
    edit_file_name = file_name;
    initComponents();
    
    try {
        Connection con = ConnectionProvider.getCon();
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("SELECT * FROM files WHERE file_name = '" + file_name + "'");
        
        if (rs.next()) {
            // Retrieve data from the ResultSet and set it in the form fields
            String fileName = rs.getString("file_name");
            String fileType = rs.getString("file_type");
            String fileUploaded = rs.getString("file");
            String desc = rs.getString("description");
            int visibility = rs.getInt("public_or_private");

            file_name_field.setText(fileName);
            file_type_select.setSelectedItem(fileType);
            file_upload.setText(fileUploaded);
            description_field.setText(desc);
            
            // Set the visibility based on the value from the database
            if (visibility == 1) {
                visibility_select.setSelectedItem("Public");
            } else {
                visibility_select.setSelectedItem("Private");
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage());
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        file_name_field = new javax.swing.JTextField();
        file_type_select = new javax.swing.JComboBox<>();
        description = new javax.swing.JLabel();
        visibility = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        description_field = new javax.swing.JTextArea();
        visibility_select = new javax.swing.JComboBox<>();
        file_upload = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        file_name = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        file_type = new javax.swing.JLabel();
        delete_btn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(550, 200));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(file_name_field, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 38, 258, 28));

        file_type_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Folder", "Video", "PDF", "Image" }));
        getContentPane().add(file_type_select, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 78, -1, -1));

        description.setText("Description");
        getContentPane().add(description, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 128, 97, 29));

        visibility.setText("Visibility");
        getContentPane().add(visibility, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 264, 97, 27));

        description_field.setColumns(20);
        description_field.setRows(5);
        jScrollPane2.setViewportView(description_field);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 128, 258, 113));

        visibility_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Public", "Private" }));
        getContentPane().add(visibility_select, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 265, 84, -1));
        getContentPane().add(file_upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(237, 78, 179, 24));

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 320, 84, -1));

        file_name.setText("File Name");
        getContentPane().add(file_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 35, 97, 25));

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        getContentPane().add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(331, 320, 85, -1));

        file_type.setText("FIle Type");
        getContentPane().add(file_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 78, 97, 24));

        delete_btn.setText("Delete");
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });
        getContentPane().add(delete_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 320, 100, -1));

        jPanel2.setBackground(new java.awt.Color(204, 212, 113));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setText("Edit File Details");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 369, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        String fileName = file_name_field.getText();
        String fileType = (String) file_type_select.getSelectedItem();
        String fileUploaded = file_upload.getText();
        String desc = description_field.getText();
        int visibility;
        if("public".equalsIgnoreCase((String) visibility_select.getSelectedItem())){
            visibility = 1;
        }
        else{
            visibility = 0;
        }

        try {
    Connection con = ConnectionProvider.getCon();
    String updateQuery = "UPDATE files SET file_name = ?, file_type = ?, file = ?, description = ?, public_or_private = ? WHERE file_name = ?";
    
    PreparedStatement preparedStatement = con.prepareStatement(updateQuery);
    preparedStatement.setString(1, fileName);
    preparedStatement.setString(2, fileType);
    preparedStatement.setString(3, fileUploaded);
    preparedStatement.setString(4, desc);
    preparedStatement.setInt(5, visibility);
    preparedStatement.setString(6, edit_file_name);

    int rowsUpdated = preparedStatement.executeUpdate();
    
    if (rowsUpdated > 0) {
        JOptionPane.showMessageDialog(null, "Updated successfully");
        new addFiles().setVisible(true);
        setVisible(false);
    } else {
        JOptionPane.showMessageDialog(null, "No record found with file_name: " + edit_file_name);
    }
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage());
}


    }//GEN-LAST:event_saveActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_cancelActionPerformed

    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);

    if (dialogResult == JOptionPane.YES_OPTION) {
        // yes = deletion
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            
            // Use the edit_file_name as the criteria to delete the row
            String userName = new login().user_name;
            userName = "test1";
            String deleteQuery = "DELETE FROM files WHERE file_name = '" + edit_file_name + "' && name = '"+userName+"'";
            int deletedRows = st.executeUpdate(deleteQuery);

            if (deletedRows > 0) {
                // Row deleted successfully
                JOptionPane.showMessageDialog(null, "Record deleted successfully");
                
                new addFiles().setVisible(true);
                setVisible(false);
            } else {
                // No rows deleted, display a message indicating failure
                JOptionPane.showMessageDialog(null, "No matching record found for deletion");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage());
        }
    }
        
    }//GEN-LAST:event_delete_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JButton delete_btn;
    private javax.swing.JLabel description;
    private javax.swing.JTextArea description_field;
    private javax.swing.JLabel file_name;
    private javax.swing.JTextField file_name_field;
    private javax.swing.JLabel file_type;
    private javax.swing.JComboBox<String> file_type_select;
    private javax.swing.JTextField file_upload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton save;
    private javax.swing.JLabel visibility;
    private javax.swing.JComboBox<String> visibility_select;
    // End of variables declaration//GEN-END:variables
}
